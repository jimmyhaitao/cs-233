.text

## struct Node {
##     char seen;
##     int basket;
##     int dirt;
##     int id_size;
##     int *identity;
##     int num_children;
##     Node *children[4];
## };
##
## int
## get_num_carrots(Node *spot) {
##     if (spot == NULL) {
##         return 0;
##     }
##     // Inverts the first and third byte.
##     unsigned int dig = spot->dirt ^ 0x00ff00ff;
##     // Circular shifts the bytes left one.
##     dig = ((dig & 0xffffff) << 8) | ((dig & 0xff000000) >> 24);
##     return spot->basket ^ dig;
## }

.globl get_num_carrots
get_num_carrots:
	# Your code goes here :)
	jr  $ra
